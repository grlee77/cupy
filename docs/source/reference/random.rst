.. module:: cupy.random

Random Sampling (``cupy.random``)
=================================

.. https://docs.scipy.org/doc/numpy/reference/routines.random.html

The big difference of :mod:`cupy.random` from :mod:`numpy.random` is that :mod:`cupy.random` supports ``dtype`` option for most functions.
This option enables us to generate float32 values directly without any space overhead.

Unlike NumPy, CuPy allows itself to replace its random number generator across its major versions.
It means that numbers generated by cupy.random of a new major version may not be the same as that of its previous one even if the same seed and distribution are used.


Sample random data
------------------

.. autosummary::
   :toctree: generated/
   :nosignatures:

   cupy.random.rand
   cupy.random.randn
   cupy.random.randint
   cupy.random.random_integers
   cupy.random.random_sample
   cupy.random.random
   cupy.random.ranf
   cupy.random.sample
   cupy.random.choice
   cupy.random.bytes


Distributions
-------------

.. autosummary::
   :toctree: generated/
   :nosignatures:

   cupy.random.beta
   cupy.random.binomial
   cupy.random.chisquare
   cupy.random.dirichlet
   cupy.random.exponential
   cupy.random.f
   cupy.random.gamma
   cupy.random.geometric
   cupy.random.gumbel
   cupy.random.hypergeometric
   cupy.random.laplace
   cupy.random.logistic
   cupy.random.lognormal
   cupy.random.logseries
   cupy.random.multinomial
   cupy.random.multivariate_normal
   cupy.random.negative_binomial
   cupy.random.noncentral_chisquare
   cupy.random.noncentral_f
   cupy.random.normal
   cupy.random.pareto
   cupy.random.poisson
   cupy.random.power
   cupy.random.rayleigh
   cupy.random.standard_cauchy
   cupy.random.standard_exponential
   cupy.random.standard_gamma
   cupy.random.standard_normal
   cupy.random.standard_t
   cupy.random.triangular
   cupy.random.uniform
   cupy.random.vonmises
   cupy.random.wald
   cupy.random.weibull
   cupy.random.zipf


Random generator
----------------

.. autosummary::
   :toctree: generated/
   :nosignatures:

   cupy.random.RandomState
   cupy.random.seed
   cupy.random.get_random_state
   cupy.random.set_random_state

.. note::

    CuPy does not provide ``cupy.random.get_state`` nor ``cupy.random.set_state`` at this time.
    Use :func:`cupy.random.get_random_state` and :func:`cupy.random.set_random_state` instead.
    Note that these functions use :class:`cupy.random.RandomState` instance to represent the internal state, which cannot be serialized.


Permutations
------------

.. autosummary::
   :toctree: generated/
   :nosignatures:

   cupy.random.shuffle
   cupy.random.permutation
